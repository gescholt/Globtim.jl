# @time msolve_polynomial_system(pol_cheb, x; n=3, basis=:chebyshev, bigint=true);
# df_cheb = msolve_parser("outputs.ms", error_func, TR)



@time real_pts_cheb = solve_polynomial_system(x, n, d, pol_cheb.coeffs; basis=:chebyshev, bigint=true)
df_cheb_2 = process_critical_points(real_pts_cheb, error_func, TR.sample_range, n, TR = TR)
# this has not been translated to the new position yet (center)


# Legendre
pol_lege = Constructor(TR, d, basis=:legendre);
msolve_polynomial_system(pol_lege, x; n=3, basis=:legendre, bigint=true);
df_lege = msolve_parser("outputs.ms", error_func, TR)


## The homotopy Continuation version too.

# Generate grid and evaluate 
# Prepare level set data for specific level
level_set = prepare_level_set_data(grid, values, 1.0, tolerance=0.2)

plot_level_set(to_makie_format(level_set))